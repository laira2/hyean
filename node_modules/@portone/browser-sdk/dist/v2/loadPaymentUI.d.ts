import { Entity, PaymentError, PaymentResponse } from './index.js';
import { PaymentUIType } from './entity/index.js';
import { Prettify } from '../utils.js';
export declare function loadPaymentUI(request: LoadPaymentUIRequest, callbacks: {
    onPaymentSuccess: (response: PaymentResponse) => void;
    onPaymentFail: (error: PaymentError) => void;
}): Promise<void>;
export type LoadPaymentUIRequest = Prettify<{
    uiType: PaymentUIType;
    storeId: string;
    paymentId: string;
    orderName: string;
    totalAmount: number;
    channelKey: string;
    pgProvider?: Entity.PgProvider;
    isTestChannel?: boolean;
    taxFreeAmount?: number;
    vatAmount?: number;
    customer?: Entity.Customer;
    redirectUrl?: string;
    noticeUrls?: string[];
    confirmUrl?: string;
    appScheme?: string;
    isEscrow?: boolean;
    products?: Entity.Product[];
    isCulturalExpense?: boolean;
    currency: Entity.Currency;
    locale?: Entity.Locale;
    customData?: Record<string, any>;
    offerPeriod?: Entity.OfferPeriod;
    productType?: Entity.ProductType;
    storeDetails?: Entity.StoreDetails;
    bypass?: Entity.LoadPaymentUIBypass;
    country?: Entity.Country;
    shippingAddress?: Entity.Address;
}>;
