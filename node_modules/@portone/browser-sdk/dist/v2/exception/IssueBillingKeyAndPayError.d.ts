import { CheckoutServiceErrorCode } from './CheckoutServiceErrorCode.js';
import { GrpcErrorCode } from './GrpcErrorCode.js';
import { PortOneError } from './index.js';
import { TxServiceIssueErrorCode } from './TxServiceIssueErrorCode.js';
import { TxServicePayErrorCode } from './TxServicePayErrorCode.js';
export type IssueBillingKeyAndPayErrorCode = CheckoutServiceErrorCode | GrpcErrorCode | TxServiceIssueErrorCode | TxServicePayErrorCode;
export declare function isIssueBillingKeyAndPayError(error: unknown): error is IssueBillingKeyAndPayError;
export declare class IssueBillingKeyAndPayError extends Error implements PortOneError {
    static [Symbol.hasInstance](instance: unknown): boolean;
    __portOneErrorType: string;
    transactionType: "ISSUE_BILLING_KEY_AND_PAY";
    txId?: string;
    paymentId?: string;
    billingKey?: string;
    code: IssueBillingKeyAndPayErrorCode;
    message: string;
    constructor({ txId, paymentId, billingKey, code, message, }: {
        txId?: string;
        paymentId?: string;
        billingKey?: string;
        code: IssueBillingKeyAndPayErrorCode;
        message: string;
    });
}
export default IssueBillingKeyAndPayError;
